services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    networks:
      - elk-net
    ports:
      - 9200:9200
    volumes:
      - esdata:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:7.15.2
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - elk-net
    ports:
      - 5601:5601

  postgresql:
    image: postgres:13
    user: root
    container_name: postgresql
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    networks:
      - elk-net
    ports:
      - 5432:5432
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./logs:/var/log/postgresql
    command: "postgres 
    -c logging_collector=on 
    -c log_duration=on 
    -c log_statement='all' 
    -c log_line_prefix='%m [%p] %q%u@%d ' 
    -c log_min_duration_statement=1000 
    -c log_directory='/var/log/postgresql' 
    -c log_filename='postgresql.log'"

  ml_monitor:
    build: ./ml_module
    container_name: ml_monitor
    user: root
    env_file:
      - .env
    environment:
      - ELASTICSEARCH_HOST=elasticsearch
    networks:
      - elk-net
    depends_on:
      - elasticsearch
    volumes:
      - ./ml_module:/app

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.15.2
    command: filebeat -e -strict.perms=false
    container_name: filebeat
    user: root
    networks:
      - elk-net
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./logs:/var/log/postgresql
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  esdata:
    driver: local

networks:
  elk-net:
    driver: bridge